#!/bin/bash

### This script generates index.html, which loads all needed javascript and
### templates for the app. It also generates bookmark.html.

## -----------------------------------------------------------------------------
## generate CSS links
## -----------------------------------------------------------------------------

# move into data dir
pushd data/ > /dev/null

css=""
cssfiles="`find app/css -name '*.css' \
	| sort \
	| grep -v 'template.css' \
	| grep -v 'reset.css' \
	| grep -v 'general.css' `"
for cssfile in $cssfiles; do
	css="$css"'\n'"<link rel=\"stylesheet\" href=\"$cssfile\">"
done

## -----------------------------------------------------------------------------
## generate JS includes
## -----------------------------------------------------------------------------
js=""
function print_js() {
	jsfile=$1
	jsfile="`echo $jsfile | sed 's|___| |g'`"
	js="$js"'\n'"<script src=\"$jsfile\"></script>"
}

function path_to_js() {
	path=$1
	files="`find $path -name '*.js' | sort | sed 's| |___|g'`"
	js="$js"'\n'
	for jsfile in $files; do
		print_js $jsfile
	done
}

jsfiles="`find app/library -name '*.js' \
	| sort \
	| grep -v 'ignore' \
	| grep -v 'mootools-' \
	| grep -v 'composer' \
	| grep -v 'bookmarklet' \
	| sed 's| |___|g' `"
for jsfile in $jsfiles; do print_js $jsfile; done

print_js "app/turtl.js"
path_to_js "app/turtl"
path_to_js "app/handlers"
path_to_js "app/controllers"
path_to_js "app/models"

## -----------------------------------------------------------------------------
## generate templates
## -----------------------------------------------------------------------------
views="var _templates = {};"
viewfiles="`find app/views -name '*.html' | sort | sed 's| |___|g'`"
for viewfile in $viewfiles; do
	content=$( cat $viewfile \
		| awk '{ prev_line = line; line = $0; } NR > 1 { print prev_line; } END { ORS = ""; print line; }' \
		| sed 's|</script>|</%script%>|g' \
		| sed 's|<script|<%script%|g' \
		| sed "s|'|\\\'|g" \
		| sed 's|\\|\\\\|g' \
		| sed 's|\/|\\/|g' \
		| tr -d '\r' \
		| sed ':a;N;$!ba;s/\n/\\\n/g' )
	name="`echo $viewfile | sed 's|app/views/||' | sed 's|\.html||' `"
	views="${views}"'\n\n'"_templates['${name}'] = '${content}"'\\\n'"';"
done

## -----------------------------------------------------------------------------
## put it all together
## -----------------------------------------------------------------------------
function replace() {
	string=$1
	rep=$2
	string="`echo "$string"|awk '{printf("%s\\\\n", $0);}'|sed -e 's/\\\n$//'`"
	echo "$string"
}

index="`cat index.html.tpl`"
index="`echo \"$index\" | sed \"s|{{gencss}}|$(replace "$css")|g\"`"
index="`echo \"$index\" | sed \"s|{{genjs}}|$(replace "$js")|g\"`"

# send our generated data into their restecpive files
echo -ne "$index" > index.html
echo -e "$views" > templates.js

## -----------------------------------------------------------------------------
## generate background.html
## -----------------------------------------------------------------------------
# copy index.html to background.html, replacing app/turtl.js with background.js
cat index.html \
	| sed 's|\(<script src="app/turtl.js"></script>\)|\1\n<script src="background.js"></script>|' \
	| sed 's|<body class="[^"]\+">|<body class="bare">|' \
	> background.html

# restore dir
popd > /dev/null

