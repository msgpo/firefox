#!/bin/bash

### This script regenerates the packaged html templates, copies any needed files
### (read: config files) to their proper place, and packages the tagit XPI file.
###
### Note that this script is meant to be run in the top-level addon folder, not
### not in the scripts/ folder.

# ------------------------------------------------------------------------------
# config section
# ------------------------------------------------------------------------------
# path to cfx
CFX=../../../addon-sdk-1.14/bin/cfx
# tmp dir for generating package
TMP=/tmp/tagit-package
# the resulting XPI file (*must* be the same as what cfx xpi produces)
XPI=tagit.xpi

nogen=$1

if [ "$nogen" != "--skip-tpl" ]; then
	# generate templates
	echo -n "Regenerating templates so we have the freshest versions..."
	./scripts/generate-templates
	echo "done."
fi

# package the addon
echo "Packaging addon (via cfx)."
$CFX xpi > /dev/null

# grab the app dir
pushd data/app/ > /dev/null
APPDIR=`pwd -P`
popd > /dev/null

# create/enter our temp dir
mkdir -p $TMP
rm -rf $TMP/*
EXTDIR=`realpath .`
pushd $TMP/ > /dev/null

echo -n "Upacking addon to make modifications..."
unzip $EXTDIR/$XPI > /dev/null
echo "done."

echo "  - copying live config over local"
cp $EXTDIR/lib/config.live.js resources/tagit/lib/config.js
rm -f resources/tagit/data/app

echo "  - symlinking app subfolder"
ln -s $APPDIR resources/tagit/data/app

echo "  - setting applicable permissions"
find resources/addon-sdk -type d -exec chmod 755 {} \;
find resources/addon-sdk -type f -exec chmod 644 {} \;
chmod 644 bootstrap.js

echo -n "Repackaging..."
zip -r tagit . -x *.git* > /dev/null
echo "done."

mv tagit.zip $EXTDIR/$XPI
popd > /dev/null

echo "Clearing tmp dir ($TMP/)"
rm -rf $TMP

echo "Complete. Created fully-packaged file: $XPI."

